#recursion 2,time n,space n
# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseList(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if head is None:
            return head
        revhead=self.reverse(head)
        return revhead
    def reverse(self,root):
        #base
        if root.next is None:
            return root
        #logic
        revhead=self.reverse(root.next)
        print(root.val,revhead.val)
        root.next.next=root
        root.next=None
        return revhead
        